name: CI/CD with ArgoCD

on:
  workflow_dispatch
  # push:
  #   branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Make application.properties
      run: |
        mkdir -p ./src/main/resources
        cat > ./src/main/resources/application.properties << EOF
        spring.application.name=app-with-argocd
        server.port=8080
        spring.jpa.generate-ddl=true
        spring.jpa.hibernate.ddl-auto=create
        spring.jpa.properties.hibernate.format_sql=true
        spring.jpa.show-sql=true
        spring.datasource.url=jdbc:mysql://mysql-service:3306/testdb?createDatabaseIfNotExist=true
        spring.datasource.username=root
        spring.datasource.password=k8s12345
        spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
        EOF

    - name: Build with Maven
      run: mvn -B -DskipTests package --file pom.xml
      
    - name: Rename jar file
      run: mv ./target/*.jar ./target/app.jar

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Set SHORT_SHA env
      run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.SHORT_SHA }}

  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
    - uses: actions/checkout@v4
      with:
        repository: YOUR_USERNAME/app-with-argocd-manifest
        ref: main
        token: ${{ secrets.GH_TOKEN }}
        
    - name: Set SHORT_SHA env
      run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
    
    - name: Update image tag
      run: |
        sed -i "s%image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:[a-f0-9]\{7\}%image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ env.SHORT_SHA }}%" ./argocd-app.yaml
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update image to ${{ env.SHORT_SHA }}" || exit 0
        git push
